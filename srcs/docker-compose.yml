# --- containers ---

# common properties of all services
x-common: &common
  env_file:
    - .env
  restart: on-failure
  networks:
    - net

services:

  # mariadb container is independent of below containers and is therefore created first
  mariadb:
    <<: *common
    container_name: mariadb
    image: mariadb #assign image name
    build: ./requirements/mariadb/ #build image from Dockerfile
    volumes:
      - database:/var/lib/mysql/
    secrets:
      - db_password
      - db_password_root

  # wordpress container depends on the mariadb container and is therefore created second
  wordpress:
    <<: *common
    container_name: wordpress
    image: wordpress
    build: ./requirements/wordpress/
    volumes:
      - wordpress_files:/var/www/inception/
    depends_on:
      - mariadb
    secrets:
      - wp_admin_password
      - wp_user_password
      - db_password


  # nginx container depends on the wordpress container
  # it uses args to pass the certificate and key path to the Dockerfile
  # this allows the Dockerfile to access the private information stored in the .env file
  nginx:
    <<: *common
    container_name: nginx
    image: nginx
    build:
      context: ./requirements/nginx/
      args:
        CERTIFICATE_FOLDER: ${CERTIFICATE_FOLDER}
        CERTIFICATE: ${CERTIFICATE}
        KEY: ${KEY}
        COUNTRY: ${COUNTRY}
        STATE: ${STATE}
        LOCALITY: ${LOCALITY}
        ORGANIZATION: ${ORGANIZATION}
        UNIT: ${UNIT}
        DOMAIN_NAME: ${DOMAIN_NAME}
    ports:
      - "443:443"
    volumes:
      - wordpress_files:/var/www/inception/
      - website_files:/var/www/website/
    depends_on:
      - wordpress
      - website

  # redis container depends on the nginx container
  redis:
    <<: *common
    container_name: redis
    image: redis
    init: true
    build:
      context: ./requirements/redis
    depends_on:
      - nginx

  # static website
  website:
    container_name: website
    image: website
    init: true
    build:
      context: ./requirements/website/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - website_files:/var/www/website/


# --- secrets ---
# store passwords

secrets:
  db_password:
    file: ../secrets/db_password.txt
  db_password_root:
    file: ../secrets/db_password_root.txt
  wp_admin_password:
    file: ../secrets/wp_admin_password.txt
  wp_user_password:
    file: ../secrets/wp_user_password.txt


# --- volumes ---

# keep the data shared between the containers
# act as a shared volume, allowing data to be accessed by multiple containers and the host machine
# device: specifies the location on the host machine where the data will be stored
volumes:

  # mariadb
  database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/data/mariadb_data

  # wordpress
  wordpress_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/data/wordpress_data

  # website
  website_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/data/website_data

# --- networks ---

# this network is used to connect the containers
# it acts like a virtual switch between the containers
# "net" is the name of the network
# "bridge" is the type of the network
networks:
  net:
    driver: bridge
